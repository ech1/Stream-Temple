user www-data;
worker_processes  auto;
pid /run/nginx.pid;

events {
        worker_connections  1024;
        use epoll;
        multi_accept on;
}

# RTMP configuration
rtmp {
        server {
                listen 1935;  #listen port
                #allow 1.2.3.4;
                #deny all;
                #People can use your stream so deny every ip except yours ^
		#max_streams 10; #you can also just limit the amount of streams on your streaming server (10 is more or less equal to ONE obs stream. so 30 is equal to 3 OBS streams)
	
                chunk_size 4096;
                application show {  #rtmp push stream request path
                        live on;
                        hls on;
                        hls_path /mnt/hls/;
                        hls_fragment 10s;
                        hls_playlist_length 18;
                }
        }
}


http {
        server {
        	ssl_certificate /root/.acme.sh/temple.void.yt/fullchain.cer;
	        ssl_trusted_certificate /root/.acme.sh/temple.void.yt/temple.void.yt.cer;
	        ssl_certificate_key /root/.acme.sh/temple.void.yt/temple.void.yt.key;
                listen 443 ssl http2;
                listen [::]:443 ssl http2;
                server_name temple.void.yt;

                root /mnt/web/;
                index index.php;

                include mime.types;
                location ~ \.php {
                        include fastcgi.conf;
                        fastcgi_split_path_info ^(.+\.php)(/.+)$;
                        fastcgi_pass unix:/var/run/php/php7.4-fpm.sock;
                }

        }

	#PORT 4443
	#HTTPS ENCRYPTED HLS STREAM
	server {
        	ssl_certificate /root/.acme.sh/temple.void.yt/fullchain.cer;
	        ssl_trusted_certificate /root/.acme.sh/temple.void.yt/temple.void.yt.cer;
	        ssl_certificate_key /root/.acme.sh/temple.void.yt/temple.void.yt.key;
                listen 4443 ssl http2;
                listen [::]:4443 ssl http2;
                server_name temple.void.yt;

                sendfile off;
                tcp_nopush on;
                #aio on;
                directio 512;
                default_type application/octet-stream;


                location / {
                        #add_header 'Cache-Control' 'no-cache';
                        #add_header 'Access-Control-Allow-Origin' '*' always;

                        add_header Access-Control-Allow-Origin *;
			add_header Cache-Control no-cache;
                        add_header 'Access-Control-Allow-Headers' 'Range';
                        types {
                                application/dash+xml mpd;
                                application/vnd.apple.mpegurl m3u8;
                                video/mp2t ts;
                        }
                        root  /mnt/hls/;
                        autoindex on;
                }
        }
	#SWAMP CINEMA WILL USE PORT 8080 WITH THIS CONFIG ONLY 
	#PORT 8080 WITHOUT HTTPS AND WITH THOSE HEADERS BELOW
	#IF YOU CANT QUEUE JUST REPEATEDLY QUEUE THE LINK TO THE M3U8 FILE AND IT SHOULD WORK
	server {
		listen 8080 ;
                listen [::]:8080 ;
                server_name temple.void.yt;

                sendfile off;
                tcp_nopush on;
                #aio on;
                directio 512;
                default_type application/octet-stream;


                location / {
			if ($request_method = 'GET') {
		        	add_header 'Access-Control-Allow-Origin' '*';
			        add_header 'Access-Control-Allow-Credentials' 'true';
                        	add_header 'Cache-Control' 'no-cache';
			        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
			        add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';
    			}
                        types {
                                application/dash+xml mpd;
                                application/vnd.apple.mpegurl m3u8;
                                video/mp2t ts;
                        }
                        root  /mnt/hls/;
                        autoindex on;
                }
	}
}

